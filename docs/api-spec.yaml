openapi: 3.1.0
info:
  title: GITTE API
  description: |
    GITTE (Great Individual Tutor Embodiment) API for creating personalized visual representations 
    and embodiments of intelligent learning assistants.
    
    This API provides endpoints for:
    - User authentication and management
    - Consent management and privacy controls
    - PALD (Pedagogical Agent Level of Design) schema management
    - LLM chat interactions
    - Image generation for embodiment avatars
    - Federated learning capabilities
    - Administrative functions and monitoring
    
    ## Authentication
    
    The API uses session-based authentication. Users must first authenticate via the `/auth/login` 
    endpoint to receive a session token.
    
    ## Privacy & GDPR Compliance
    
    All data processing requires explicit user consent. The API enforces privacy-by-design principles
    with comprehensive audit logging and data protection measures.
    
    ## Rate Limiting
    
    API endpoints are rate-limited to prevent abuse:
    - Authentication: 5 requests per minute
    - Chat interactions: 10 requests per minute
    - Image generation: 3 requests per minute
    - Administrative: 100 requests per minute
    
  version: 1.0.0
  contact:
    name: GITTE Development Team
    email: dev@gitte.ai
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.gitte.ai/v1
    description: Production server
  - url: https://staging-api.gitte.ai/v1
    description: Staging server
  - url: http://localhost:8501/api/v1
    description: Development server

paths:
  # Authentication Endpoints
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      description: Create a new user account with role assignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and create session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Invalidate current session
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  # Consent Management
  /consent:
    get:
      tags:
        - Consent
      summary: Get user consent status
      description: Retrieve current consent status and version
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Consent status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentStatus'

    post:
      tags:
        - Consent
      summary: Grant consent
      description: Grant consent for data processing
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentRequest'
      responses:
        '200':
          description: Consent granted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponse'

    delete:
      tags:
        - Consent
      summary: Withdraw consent
      description: Withdraw consent and trigger data deletion
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Consent withdrawn successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  # PALD Management
  /pald/schema:
    get:
      tags:
        - PALD
      summary: Get current PALD schema
      description: Retrieve the current PALD schema version and structure
      security:
        - sessionAuth: []
      responses:
        '200':
          description: PALD schema retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PALDSchema'

  /pald/data:
    get:
      tags:
        - PALD
      summary: Get user PALD data
      description: Retrieve user's PALD data with coverage analysis
      security:
        - sessionAuth: []
      responses:
        '200':
          description: PALD data retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PALDData'

    post:
      tags:
        - PALD
      summary: Update PALD data
      description: Update user's PALD data with validation
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PALDUpdateRequest'
      responses:
        '200':
          description: PALD data updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PALDData'

  /pald/compare:
    post:
      tags:
        - PALD
      summary: Compare PALD data
      description: Compare two PALD records and return differences
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PALDCompareRequest'
      responses:
        '200':
          description: PALD comparison completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PALDCompareResponse'

  # Chat Interactions
  /chat/sessions:
    get:
      tags:
        - Chat
      summary: Get chat sessions
      description: Retrieve user's chat session history
      security:
        - sessionAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            maximum: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Chat sessions retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSessionList'

    post:
      tags:
        - Chat
      summary: Create chat session
      description: Start a new chat session
      security:
        - sessionAuth: []
      responses:
        '201':
          description: Chat session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'

  /chat/sessions/{sessionId}/messages:
    post:
      tags:
        - Chat
      summary: Send chat message
      description: Send a message in a chat session and receive LLM response
      security:
        - sessionAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageRequest'
      responses:
        '200':
          description: Message sent and response received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageResponse'

  # Image Generation
  /images/generate:
    post:
      tags:
        - Images
      summary: Generate embodiment image
      description: Generate an avatar image based on text prompt
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
      responses:
        '200':
          description: Image generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGenerationResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /images/{imageId}:
    get:
      tags:
        - Images
      summary: Get generated image
      description: Retrieve a generated image by ID
      security:
        - sessionAuth: []
      parameters:
        - name: imageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Image retrieved
          content:
            image/png:
              schema:
                type: string
                format: binary

  # Federated Learning
  /federated-learning/status:
    get:
      tags:
        - Federated Learning
      summary: Get FL status
      description: Get federated learning participation status
      security:
        - sessionAuth: []
      responses:
        '200':
          description: FL status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederatedLearningStatus'

  /federated-learning/updates:
    post:
      tags:
        - Federated Learning
      summary: Submit FL update
      description: Submit local model update for federated learning
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FederatedLearningUpdate'
      responses:
        '200':
          description: FL update submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  # Administrative Endpoints
  /admin/statistics:
    get:
      tags:
        - Administration
      summary: Get system statistics
      description: Retrieve comprehensive system statistics (Admin only)
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Statistics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatistics'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/users:
    get:
      tags:
        - Administration
      summary: List users
      description: Get list of system users (Admin only)
      security:
        - sessionAuth: []
      parameters:
        - name: role
          in: query
          schema:
            type: string
            enum: [ADMIN, PARTICIPANT]
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Users retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'

  /admin/export:
    post:
      tags:
        - Administration
      summary: Export data
      description: Export system data with filtering options (Admin only)
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
      responses:
        '200':
          description: Export completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
            text/csv:
              schema:
                type: string

  # Health and Monitoring
  /health:
    get:
      tags:
        - Monitoring
      summary: Health check
      description: Get system health status
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /metrics:
    get:
      tags:
        - Monitoring
      summary: Get metrics
      description: Get system metrics in Prometheus format
      responses:
        '200':
          description: Metrics retrieved
          content:
            text/plain:
              schema:
                type: string

components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: session_id

  schemas:
    # Authentication Schemas
    UserRegistration:
      type: object
      required:
        - username
        - password
        - role
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
        password:
          type: string
          minLength: 8
          maxLength: 128
        role:
          type: string
          enum: [ADMIN, PARTICIPANT]

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserResponse'
        session_id:
          type: string
        expires_at:
          type: string
          format: date-time

    UserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        role:
          type: string
          enum: [ADMIN, PARTICIPANT]
        pseudonym:
          type: string
        created_at:
          type: string
          format: date-time

    # Consent Schemas
    ConsentStatus:
      type: object
      properties:
        granted:
          type: boolean
        version:
          type: string
        granted_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time

    ConsentRequest:
      type: object
      required:
        - consent_version
        - granted
      properties:
        consent_version:
          type: string
        granted:
          type: boolean

    ConsentResponse:
      type: object
      properties:
        status:
          type: string
        granted_at:
          type: string
          format: date-time
        version:
          type: string

    # PALD Schemas
    PALDSchema:
      type: object
      properties:
        version:
          type: string
        schema:
          type: object
        created_at:
          type: string
          format: date-time

    PALDData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pald_content:
          type: object
        schema_version:
          type: string
        coverage_percentage:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PALDUpdateRequest:
      type: object
      required:
        - pald_content
      properties:
        pald_content:
          type: object

    PALDCompareRequest:
      type: object
      required:
        - pald_id_1
        - pald_id_2
      properties:
        pald_id_1:
          type: string
          format: uuid
        pald_id_2:
          type: string
          format: uuid

    PALDCompareResponse:
      type: object
      properties:
        added:
          type: array
          items:
            type: string
        removed:
          type: array
          items:
            type: string
        modified:
          type: object
          additionalProperties:
            type: object
            properties:
              old:
                type: string
              new:
                type: string

    # Chat Schemas
    ChatSession:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        message_count:
          type: integer

    ChatSessionList:
      type: object
      properties:
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/ChatSession'
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer

    ChatMessageRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          maxLength: 2000

    ChatMessageResponse:
      type: object
      properties:
        user_message:
          type: string
        assistant_response:
          type: string
        message_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        model_used:
          type: string
        latency_ms:
          type: number

    # Image Generation Schemas
    ImageGenerationRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          type: string
          maxLength: 500
        negative_prompt:
          type: string
          maxLength: 500
        width:
          type: integer
          default: 512
          minimum: 256
          maximum: 1024
        height:
          type: integer
          default: 512
          minimum: 256
          maximum: 1024
        steps:
          type: integer
          default: 20
          minimum: 10
          maximum: 50

    ImageGenerationResponse:
      type: object
      properties:
        image_id:
          type: string
          format: uuid
        image_url:
          type: string
          format: uri
        prompt:
          type: string
        generation_time_ms:
          type: number
        created_at:
          type: string
          format: date-time

    # Federated Learning Schemas
    FederatedLearningStatus:
      type: object
      properties:
        enabled:
          type: boolean
        participating:
          type: boolean
        last_update:
          type: string
          format: date-time
        updates_submitted:
          type: integer

    FederatedLearningUpdate:
      type: object
      required:
        - model_weights
        - data_size
      properties:
        model_weights:
          type: object
        data_size:
          type: integer
        privacy_budget:
          type: number

    # Administrative Schemas
    SystemStatistics:
      type: object
      properties:
        users:
          type: object
          properties:
            total:
              type: integer
            active_today:
              type: integer
            new_today:
              type: integer
        system:
          type: object
          properties:
            chat_sessions:
              type: integer
            images_generated:
              type: integer
            error_rate_percent:
              type: number
            uptime_hours:
              type: number
        performance:
          type: object
          properties:
            avg_response_time_ms:
              type: number
            requests_per_hour:
              type: number

    UserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer

    ExportRequest:
      type: object
      required:
        - export_type
        - format
      properties:
        export_type:
          type: string
          enum: [users, pald_data, audit_logs, chat_history]
        format:
          type: string
          enum: [json, csv]
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        filters:
          type: object

    ExportResponse:
      type: object
      properties:
        export_id:
          type: string
          format: uuid
        download_url:
          type: string
          format: uri
        expires_at:
          type: string
          format: date-time
        record_count:
          type: integer

    # Monitoring Schemas
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        services:
          type: object
          additionalProperties:
            type: object
            properties:
              status:
                type: string
              response_time_ms:
                type: number
              message:
                type: string
        timestamp:
          type: string
          format: date-time

    # Common Schemas
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
        message:
          type: string

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: integer
        timestamp:
          type: string
          format: date-time

  responses:
    UnauthorizedError:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ForbiddenError:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ValidationError:
      description: Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimitError:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'